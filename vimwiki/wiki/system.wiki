%title Mdaxue服务器配置
==Mdaxue服务器配置==
----
===Overview(概述)===
支持mdaxue系统的服务目前有3台

| WanIp          | LanIp        | HostName | Disk | Cpu                                      | Mem | Os        |
|----------------|--------------|----------|------|------------------------------------------|-----|-----------|
| 221.174.24.98  | 192.168.0.13 | web      | 2T   | Intel(R) Xeon(R) CPU E5335 @2.00GHz x4   | 20G | CentOS6.2 |
| 221.174.24.101 | 192.168.0.19 | static   | 20T  |                                          |     |           |
| 221.174.24.110 | 192.168.0.21 | db       | 3T   | Intel(R) Xeon(R) CPU E5-4620@2.20GHz x32 | 64G | CentOS6.3 |
我们以后就简称为`98`、`101`、`110`。
# `98`服务器我们称之为`web服务器`，具体架构是:
    * `LNTP`,Linux+Nginx1.2.6+Tomcat6.0.37+JDK1.6.0_30+PHP5.3.20,编译的这些组件所需的源代码都在`/usr/local/src`,安装完成后的目录一般是`/usr/local`下面，比如Nginx，/usr/local/nginx,如果后面不做特殊说明都是安装在这个目录下面.
    * Memcache服务器,启动方式:`service memcached start` 命令为`/usr/local/bin/memcached -d -m 256 -u root -p 11211 -l 192.168.0.13 -c 256 -P /tmp/memcached.pid` 意思为以后台运行(-d) 内存大小为256M(-m) root用户启动-u,监听端口为11211 -p，监听ip为单单内网监听192.168.0.13 -l, 最大连接数为256 -c ,进程pid文件存放路径 -P /tmp/memcached.pid.
    * NFS服务器，启动方式为：`/etc/rc.local`,命令为`mount -t nfs 192.168.0.19:/mysql/static /mnt/imgsvr`,代表将本服务器/mnt/imgsvr目录挂载到101服务器上的/mysql/static目录下以供101学盘服务器使用.
    * FastDfs服务器,启动方式为:`/etc/rc.local`,命令为`fdfs_trackerd /etc/fdfs/tracker.conf`、`fdfs_storaged /etc/fdfs/storage.conf`,前一个为启动tracker,后一个为启动storage,关于具体的概念可以查考后面FastDfs介绍安装和配置.
    * Gerrit代码审核服务器，启动方式为`/etc/rc.local`,命令为`su cms /home/cms/gerrit/bin/gerrit.sh restart`,以cms用户启动gerrit服务.
    * Nginx服务器，启动方式为：`service nginx start`,Nginx编译后安装在`/usr/local/nginx`,日志目录为`logs`,配置文件都放在`conf`,虚拟主机配置在`conf/vhost`,添加虚拟主机的脚本在`/home/vhost.sh`,当然也可以直接Copy现有的虚拟主机，然后在此基础上修改，推荐这样做。如果要使用脚本，请注意第二个选择的时候选No，不要开启Ftp功能。`/home/cut-nginx-log.sh`为nginx日志每天定时切割脚本，这个放在root用户的计划任务里面，用crontab -u root -e 即可查看和修改。具体的配置说明请查考Nginx安装与配置.
    * Tomcat服务器，启动方式为手动启动，`这里由斌斌完善`.
    * JDK安装在`/usr/local/jdk1.6.0_30`,自动启动.
    * PHP安装在`/usr/local/php5`,主要安装的扩展有`fastdfs_client.so`、`beast.so`、`runkit.so`、`swoole.so`、`redis.so`、`memcache.so`,其中beast是一个加密扩展，runkit是热部署模块，swoole是swoole服务模块，其它的都应该很熟悉，这几个具体的功能在查看相关安装文档。
    * Swoole服务，该服务是一个php写的server，具体介绍可以百度一下，该项目是github的一个开源项目，地址为`https://github.com/matyhtf/swoole`,该服务在其实是一个项目，用来后期支持Mdaxue系统的Webservice而启用的，方便后期跨语言跨服务器跨平台等问题的处理。前期只是用来处理获取公共导航中的学校这个问题，后期这个问题会用lua来处理，swoole项目也会改进然后重新发布，具体的请看相关项目。概述这里，只介绍有这一个服务，并且必须启动否则Mdaxue系统会跑不起来，后期lua上线后可以废弃掉。启动方式为: `cd /data/wwwroot/public.mdaxue.com/server/examples`、`php webserver.php`即可.监听端口为8888.
    * 因为是web服务器,防火墙只开启80端口，其它端口都只供内网访问，所有项目都放在/data/wwwroot下面,对应的域名文件夹，即为相关web服务器路径.部署项目直接进入文件夹,git pull(只使用于php)，Java项目请参考Tomcat介绍.
# 101服务器我们称之为`学盘服务器`,具体架构是:`陈文辉完善`
# 110服务器我们称之为`数据库服务器`,具体架构为:
    * 主要安装的是Mysql服务器,启动方式为`service mysqld start`,安装路径`/usr/local/mysql`,监听端口:内网监听，Mysql数据库data目录：`/data/mysql`,每日增量备份脚本`/root/mysql_daily_backup.sh`,每月全量备份脚本`/root/mysql_full_backup.sh`,具体启动方式在root的计划任务中可以看到.
    * Redis服务器，启动方式为`service redis start`,命令为`/usr/local/bin/redis-server /etc/redis.conf`,代表着Redis服务器的配置文件在`/etc/redis.conf`.内网监听.
    * Memcache服务器,启动方式为`service memcached start`,命令为`/usr/local/bin/memcached -d -m 1024 -u root -p 11211 -l 192.168.0.21 -c 256 -P /tmp/memcached.pid`,具体意思可参考98服务器，这里不同的是开启了1个G的内存，以适应Java需要.
    * 没有对外网开通任何端口，上述所有服务都以内网为监听，所以不存在被入侵的可能性，如果被入侵要考虑内网被信任的机器.
----
===约定===
{{{
    注意:这里为所有安装过程中的约定。是在下面公共篇中生产服务器在安装过程当中必须遵循的，是系统
    维护人员必须最先阅读的，否则下面各个服务组件的安装都有可能失败。
    }}}
    # 首次安装，即CentOS为初始化安装，必须执行以下命令:
        {{{class="brush: bash"
              echo -e "# Firewall configuration written by system-config-firewall\n# Manual customization of this file is not recommended.\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -i lo -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 21 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 10045:10090 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\nCOMMIT" > /etc/sysconfig/iptables
              service iptables restart
              echo -e "#SELINUX=enforcing\n#SELINUXTYPE=targeted\nSELINUX=disabled\nSETLOCALDEFS=0" > /etc/selinux/config
              yum install -y make apr* autoconf automake curl-devel gcc gcc-c++ gtk+-devel zlib-devel openssl openssl-devel pcre-devel gd gettext gettext-devel kernel keyutils patch perl kernel-headers compat* mpfr cpp glibc libgomp libstdc++-devel ppl cloog-ppl keyutils-li bs-devel libcom_err-devel libsepol-devel libselinux-devel krb5-devel libXpm* freetype freetype-devel freetype* fontconfig fontconfig-devel libjpeg* libpng* php-common php-gd ncurses* libtool* libxml2 libxml2-devel patch policycoreutils bison gd-devel git
            }}}
            页面上的`&gt;`代表`>`符号,以上操作分别是初始化防火墙，开启22，21，80，3306这几个端口，后期可以调整，然后启动
            防火墙，关闭SELINUX，最后是yum 安装许多其它软件都必须安装的组件。
    # 在以后的安装过程中，都不会说明软件包从哪里来的，即不会有`wget -c http://nginx.org/download/nginx-1.2.9.tar.gz`这样的语句，除非特别说明或者特殊情况，所有的软件包都应该下载到`/usr/local/src`中
    可以有同一个软件的不同版本。而且所有软件版本包也都必须上传到`http://qun.yunpan.360.cn/10054480`
    这个共享群的`Packages`文件夹里面,邀请码为3468。约定就是软件源码包都放在`/usr/local/src`,安装一般都通过`--prefix=/usr/local`
    安装到`/usr/local`。安装过程中没有说明的配置文件都放在该共享中的`Packages/etc`
----
===公共篇(CentOS)===
这里的内容我们定义为所有在生产服务器或者内网测试服务器，操作系统以CentOS平台的公共内容。如Nginx即代表，在CentOS平台上面Nginx的安装和配置以及配置的详细介绍等.也即是，凡是以CentOS为平台的服务器，即可适用下面的文章.
{{{
    注意:这里虽说是所有CentOS平台的内容都可以放在这里，但是这里主要还是放和生产服务器有关的内容，在生产服务器上面不存在的组件不要放在这里，可以放到个别篇中的CentOS中.
}}}
----
# [[system/server/nginx|Nginx1.2.6的配置与安装]]
# [[system/server/mysql|Mysql5.5.28的配置与安装]]
# [[system/server/php|php5.3.27的配置与安装]]
# [[system/server/jdk|Jdk1.6.0_37的配置与安装]]
    - 斌斌完善
# [[system/server/tomcat|Tomcat6.0_37的配置与安装]]
    - 斌斌完善
# [[system/server/memcached|Memcached1.4.15的配置与安装]]
# [[system/server/redis|Redis2.6.13的配置与安装]]
# [[system/server/fastdfs|FastDfs4.0.6的配置与安装]]
# [[system/server/nfs|NFS的配置与安装]]
    - 斌斌完善
# [[system/server/git|Git的安装与使用]]
    - 斌斌完善
# [[system/server/gerrit|Gerrit2.5.6的配置与安装]]
#   - 斌斌完善
# [[system/server/swoole|Swoole1.6.1的配置与安装]]
# [[system/server/pan|学盘服务器文档预览组件的配置与安装]]
    - 文辉完善
# [[system/server/iptables|Iptables的配置与安装]]
{{{
    如果这里有遗漏的、或者后期添加更新改进的、不论什么情况，只有是生产上面提供服务的，在这里都必须添加进来.
    最终要保证的是只要按照这里面所有的内容操作，Mdaxue线上的所有功能和服务都能正常的运行.
    }}}
----
===个别篇===
这里的内容我们定义为所有不在公共篇里面，但又为Mdaxue系统所需要知道的内容，分别主要以两个平台区分。如，我们个人本地bind配置，那就肯定属于这里，并且是Ubuntu平台下.又如phpmyadmin，这个明显属于平台无关性.
====平台无关性====
# [[system/private/independence/jdk|Jdk的安装与配置]]
# [[system/private/independence/tomcat|Tomcat的安装与配置]]
# [[system/private/independence/phpmyadmin|phpMyadmin的安装与配置]]
# `Nginx配置文件详解`
    - 这里可参看[[system/server/nginx|Nginx1.2.6的配置与安装]]中的`配置详解`相关章节
# [[system/private/independence/vimwiki|Vimwiki的使用入门]]
----
====CentOS平台====
# [[system/private/centos/git|Git的安装与使用]]
----
====Ubuntu平台====
下面的基本上都可以通过apt-get方式安装，也不需要配置很方便，所以并不是所有的都有详细的文档，而且这也只是个人用的，有需要的可以自行完整或新增。
# [[system/private/ubuntu/bind|Bind9的安装与配置]]
# [[system/private/ubuntu/git|Git的安装与使用]]
# LAMP的安装与配置
    {{{class="brush :bash"
        sudo apt-get install lamp #以上命令即可搞定不需任何配置，如果需要编译安装可在该文档中自行添加
    }}}
# [[system/private/ubuntu/fastdfs|FastDfs的安装与配置]]
# Nginx的安装与配置
    - 该处完全可以参考CentOS平台的编译安装与配置。
    - 如果通过apt-get 方式安装只需要去Nginx官网添加源即可。
# Redis的安装与配置
{{{class="brush :bash"
sudo apt-get install redis-server
    }}}
# memcahced的安装与配置
{{{class="brush :bash"
sudo apt-get install memcached
    }}}
# PHP的安装、配置以及扩展的编译安装
    - 可以完全参考CentOS平台，因为这个编译和平台没有多大关系，只不过安装之前也是要先解决依赖关系，可以执行
        {{{class="brush :bash"
            apt-get -y install build-essential autoconf automake libxml2 libxml2-dev libjpeg-dev libpng-dev php5-gd \
            bzip2 libbz2-dev curl libcurl4-gnutls-dev libfreetype6-dev libcurl3-openssl-dev libxpm-dev libfreetype6-dev \
            libmcrypt-dev libxslt1-dev 
            }}}
    - 编译安装过程中如果出现什么问题可以讨论或总结写在这里，一般基本上就是找不到相关的库，网上google一下应该就能解决。
    - 如果不需要编译安装的话，直接`apt-get install lamp`的时候就能自动装上。
